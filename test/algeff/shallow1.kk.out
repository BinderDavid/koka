3
.Eff-await : forall<a,b> (.ops-await<b,a>) -> operation<a>
.Eff-send : forall<a,b> (.ops-send<b,a>) -> operation<a>
.Op-await : forall<a,b> .ops-await<a,b>
.Op-send : forall<a,b> (a) -> .ops-send<a,b>
.copy : forall<a,b> (.ops-send<a,b>, a) -> .ops-send<a,b>
.copy : forall<a,b> (.ops-await<a,b>) -> .ops-await<a,b>
await : forall<a> () -> (await<a>) a
consumer : () -> (await<int>) int
down : forall<a,b,e> (prod : () -> <await<a>,send<a>,div|e> b, action : () -> <await<a>,send<a>,div|e> b) -> <await<a>,send<a>,div|e> b
main : () -> <pure,console> ()
producer : () -> (send<int>) int
send : forall<a> (x : a) -> (send<a>) ()
unawait : forall<a,b,e> (action : () -> <await<a>,exn|e> b) -> <exn|e> b
unsend : forall<a,b,e> (action : () -> <send<a>,exn|e> b) -> <exn|e> b
up : forall<a,b,e> (cons : (a) -> <await<a>,send<a>,div|e> b, action : () -> <await<a>,send<a>,div|e> b) -> <await<a>,send<a>,div|e> b