.Op-fail : forall<a> .op-fail
.Op-pick : (n : int) -> .op-pick
.Ops-fail : (fail : .op-fail) -> .ops-choose
.Ops-pick : (pick : .op-pick) -> .ops-choose
.tag-choose : string
.tag-op-fail: string
.tag-op-pick: string
append-safe : (queen : int, xs : solution, xss : solutions) -> div solutions
choose-all : forall<a,e> (action : () -> <choose|e> a) -> e list<a>
extend : (queen : int, acc : solutions, xss : solutions) -> div solutions
fail : forall<a> () -> choose a
find-solution: (n : int, col : int) -> <choose,div> solution
find-solutions: (n : int, i : int) -> div solutions
main : () -> <div,console,ndet> ()
pick : (n : int) -> choose int
queens : (n : int) -> div solutions
queens-choose: (n : int) -> div solutions
safe? : (queen : int, xs : solution, diag : ?int) -> bool
show-solutions: (xss : solutions) -> io ()
test : (n : int) -> <div,console,ndet> ()