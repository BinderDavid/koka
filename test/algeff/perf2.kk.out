.Eff-choose : forall<a> (.ops-choose<a>) -> operation<a>
.Op-fail : forall<a,b> .ops-choose<a>
.Op-pick : forall<a> (int) -> .ops-choose<a>
appendSafe : (queen : int, xs : solution, xss : solutions) -> div solutions
chooseAll : forall<a,e> (action : () -> <choose|e> a) -> e list<a>
extend : (queen : int, acc : solutions, xss : solutions) -> div solutions
fail : forall<a> () -> choose a
findSolution: (n : int, queen : int) -> <choose,div> solution
findSolutions: (n : int, queen : int) -> div solutions
main : () -> <div,console,ndet> ()
pick : (n : int) -> choose int
queens : (n : int) -> div solutions
queensChoose: (n : int) -> div solutions
safe : (queen : int, diag : int, xs : solution) -> bool
showSolutions: (xss : solutions) -> io ()
test : (n : int) -> <div,console,ndet> ()
timer : forall<a,e> (f : () -> <console,ndet|e> a) -> <console,ndet|e> a